---
#### Some base setup including ssh keys
#
# ssh_key_name is in defaults
#
####
- name: Check hostname
  command: hostname
  register: current_hostname
  changed_when: false

- name: Set computer name
  command: "scutil --set {{ item }} {{ hostname }}"
  with_items:
    - ComputerName
    - HostName
    - LocalHostName
  become: true
  become_user: root
  when: current_hostname.stdout != hostname

- name: Defaults host name
  osx_defaults:
    domain: com.apple.smb.server
    key: NetBIOSName
    type: string
    value: "{{ hostname }}"
  become: true
  become_user: root

- name: Check for login shell
  shell: "grep {{ login_shell }} /etc/shells"
  register: etc_shells
  changed_when: false
  failed_when: false

- name: Make sure login shell is available
  lineinfile:
    path: /etc/shells
    insertafter: EOF
    line: "{{ login_shell }}"
  become: true
  become_user: root
  when: etc_shells.rc == 1

- name: Set my login shell
  command: "chpass -s {{ login_shell }}"
  when: etc_shells.rc == 1

- name: Create directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ usernm }}"
    group: "{{ groupnm }}"
    mode: "{{ item.mode }}"
  with_items:
    - { path: '{{ projects_dir }}', mode: '0755' }
    - { path: '{{ ssh_dir }}', mode: '0700' }
    - { path: '{{ ansible_secrets }}', mode: '0700' }

- name: Check if key exists
  stat:
    path: "{{ ssh_key_name }}"
  register: ssh_key

- name: Create ssh key(s)
  command: ssh-keygen -t rsa -N '' -q -f "{{ ssh_key_name }}"
  when: (ssh_key.stat.exists == false)

- name: Check for guest user filevault
  command: fdesetup list
  become: true
  become_user: root
  register: guest_user_fv
  changed_when: false

- name: Remove guest user filevault
  command: fdesetup remove -user Guest
  when: '"Guest" in guest_user_fv.stdout'

- name: Check if the guest user is around
  command: defaults read com.apple.loginwindow SHOWOTHERUSERS_MANAGED
  register: guest_user_defaults
  changed_when: false

- name: Remove guest user defaults
  osx_defaults:
    domain: com.apple.loginwindow
    key: SHOWOTHERUSERS_MANAGED
    type: bool
    value: false
    state: present
  become: true
  become_user: root
  when: guest_user_defaults == 1

- name: Check if we've set the search domains yet
  command: networksetup -getsearchdomains "{{ search_domain_service }}"
  register: search_domains_set
  changed_when: false

- name: Set search domains
  command: networksetup -setsearchdomains "{{ search_domain_service }}" "{{ search_domains }}"
  become: true
  become_user: root
  when: '"any Search Domains set" in search_domains_set.stdout'
